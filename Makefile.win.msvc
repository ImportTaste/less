# Makefile for less.
# Windows version; MS Visual C++
# make (GNU make) version

# `make -f Makefile.win.msvc`

# spell-checker:ignore (acronyms/names) Borland Borland's MSVC MinGW POSIX VCvars
# spell-checker:ignore (cmd) COMSPEC SystemDrive SystemRoot findstr windir
# spell-checker:ignore (flags/options) DDEBUG DNDEBUG NDEBUG Werror Wextra Xclang defaultlib flto flto-visibility-public-std libcmt nologo nothrow
# spell-checker:ignore (make) CFLAGS CPPFLAGS CXXFLAGS DEFINETYPE EXEEXT LDFLAGS LIBDIR LIBPATH MAKEDIR OBJDEP distclean firstword ifeq ifndef ifneq realclean undefine vclean veryclean
# spell-checker:ignore (utils) ilink nmake
# spell-checker:ignore () brac cmdbuf forwback funcs ifile lessecho lesskey linenum lsystem optfunc opttbl stdext ttyin

#### Start of system configuration section. ####

CC = cl

is_VC6 = $(shell "${CC}" 2>&1 | "%SystemRoot%\System32\findstr" /i /c:"compiler version 12.")

## ref: [MSVC Compiler Options] https://msdn.microsoft.com/en-us/library/fwkeyyhe.aspx @@ https://archive.is/aOAtH

## /c :: compile only
CFLAGS_COMPILE_ONLY = /c

# VC6-specific flags
ifneq (,${is_VC6})
## /ignore:4254 :: suppress "merging sections with different attributes" warning (LNK4254)
LDFLAGS_VC6 = /ignore:4254
endif

# Normal/usual flags
## /nologo :: startup without logo display
## /W3 :: set warning level to 3 [1..4, all; increasing level of warning scrutiny]
## /WX :: treat warnings as errors
## /wd4996 :: suppress POSIX function name deprecation warning (#C4996)
## /MT :: static linking
## /EHsc :: enable C++ EH (no SEH exceptions) + extern "C" defaults to nothrow (replaces deprecated /GX)
## /Ox :: maximum optimizations
## /O2 :: maximize speed
## /D "WIN32" :: old/extraneous define
## /D "_CONSOLE" :: old/extraneous define
## /D "NDEBUG" :: deactivate assert()
## /D "_CRT_SECURE_NO_WARNING" :: compiler directive == suppress "unsafe function" compiler warning
CFLAGS = /nologo /W3 /WX /MT /EHsc /Ox /O2 /I "." /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_CRT_SECURE_NO_WARNINGS"
LDFLAGS = /nologo /subsystem:console /incremental:no /machine:I386 ${LDFLAGS_VC6}

# DEBUG flags
## /MTd :: static linking to debug library
## /Od :: disable optimization
## /Gm :: enables minimal rebuild
## /Zi :: generates complete debugging information
#CFLAGS = /nologo /W3 /MTd /EHsc /Od /Gm /Zi /I "." /D "WIN32" /D "DEBUG" /D "_CONSOLE" /c
#LDFLAGS = /nologo /subsystem:console /incremental:yes /debug /machine:I386 ${LDFLAGS_VC6}

LD = link
LIBS = user32.lib

EXEEXT = .exe
O = obj

CP = copy

DEFINETYPE = wn
OBJDEP = defines.h less.h funcs.h cmd.h

#### End of system configuration section. ####

%.${O} : %.c
	${CC} ${CFLAGS_COMPILE_ONLY} ${CPPFLAGS} ${CFLAGS} $<

OBJ = \
	main.${O} screen.${O} brac.${O} ch.${O} charset.${O} cmdbuf.${O} \
	command.${O} cvt.${O} decode.${O} edit.${O} filename.${O} forwback.${O} \
	help.${O} ifile.${O} input.${O} jump.${O} line.${O} linenum.${O} \
	lsystem.${O} mark.${O} optfunc.${O} option.${O} opttbl.${O} os.${O} \
	output.${O} pattern.${O} position.${O} prompt.${O} search.${O} signal.${O} \
	tags.${O} ttyin.${O} version.${O} regexp.${O}

all: less${EXEEXT} lesskey${EXEEXT}

less${EXEEXT}: ${OBJ}
	-if EXIST "lesskey.${O}" del lesskey.${O}
	${LD} ${LDFLAGS} *.${O} ${LIBS} /out:$@

lesskey${EXEEXT}: lesskey.${O} version.${O}
	${LD} ${LDFLAGS} lesskey.${O} version.${O} ${LIBS} /out:$@

${OBJ}: ${OBJDEP}

defines.h: defines.${DEFINETYPE}
	${CP} defines.${DEFINETYPE} defines.h

clean:
	-if EXIST "*.${O}" del *.${O}
	-if EXIST "defines.h" del defines.h
	-if EXIST "less${EXEEXT}" del less${EXEEXT}
	-if EXIST "lesskey${EXEEXT}" del lesskey${EXEEXT}

build: all
compile: ${OBJ}
realclean: clean
rebuild: clean build
vclean: realclean
